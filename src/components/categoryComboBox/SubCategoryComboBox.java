/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package components.categoryComboBox;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import dto.Category;
import dto.SubCategory;
import dto.Unit;
import services.SubCategoryService;

/**
 *
 * @author vidur
 */
public class SubCategoryComboBox extends javax.swing.JPanel {

    /**
     * Creates new form SubCategoryComboBox
     */
    final SubCategoryService service;
    List<SubCategory> subcategories = new ArrayList<>();
    SubCategory selectedSubCategory;
    SubCategoryComboBoxInterface subCatBoxInterface;

    public SubCategoryComboBox() {
        initComponents();
        service = new SubCategoryService();
        loadCategory();
    }

    private void loadCategory() {
        try {
            subcategories.addAll(service.getAllSubCategories());
            if (!subcategories.isEmpty()) {
                selectedSubCategory = subcategories.get(0);
                if (subCatBoxInterface != null) {
                    subCatBoxInterface.onSelectSubCatgory(subcategories.get(0));
                }
            }
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            comboBoxModel.removeAllElements();
            for (SubCategory category : subcategories) {
                comboBoxModel.addElement(category.getSubCategory());
            }
            jComboBox1.setModel(comboBoxModel);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }

    public void onSelect(SubCategory subcat) {
        selectedSubCategory = subcat;
        jComboBox1.setSelectedItem(subcat.getSubCategory());
    }

    public void setInterface(SubCategoryComboBoxInterface boxInterface) {
        this.subCatBoxInterface = boxInterface;
    }

    public SubCategory getSelectedCategory() {
        return selectedSubCategory;
    }

    public void refresh() {
        loadCategory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jComboBox1)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        String selectedSubCatName = (String) jComboBox1.getSelectedItem();
        for (SubCategory subCat : subcategories) {
            if (subCat.getCategory().equals(selectedSubCatName)) {
                selectedSubCategory = subCat;
                if (subCatBoxInterface != null) {
                    subCatBoxInterface.onSelectSubCatgory(subCat);
                }
                break;
            }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String selectedSubCatName = (String) jComboBox1.getSelectedItem();
        for (SubCategory subCat : subcategories) {
            if (selectedSubCatName.equals(subCat.getSubCategory())) {
                selectedSubCategory = subCat;
                if (subCatBoxInterface != null) {
                    subCatBoxInterface.onSelectSubCatgory(subCat);
                }
                break;
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables
}
